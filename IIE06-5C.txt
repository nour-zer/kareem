public class CarTypes {

	// variable Declaration as object member variables of the CarTypes Class
	private GTerm gt;

	// variable Declaration as object member variables of the CarTypes Class
	private int maxNumRecords;
	private int recordNum;
	private int i;
	private int tableIndex;

	// Array Declaration as object member variables of the CarTypes Class
	private String[] makes;
	private int[] yearOfManufacture;
	private boolean[] inStock;
	private double[] weight;
	private char[] series;

	// Constructor for Car Types
	public CarTypes() {
		this.gt = new GTerm(1400, 1000);
		this.tableIndex = gt.addTable(700, 400, "Make\tYear of Manufacture\tIn Stock\tWeight\tSeries");
		// Declaring integer type variable maxNumRecords which stores user response as
		// to the maximum number of records
		this.maxNumRecords = Integer.parseInt(gt.getInputString("How many records would you like to enter?"));
		gt.setFontSize(30);
		gt.setXY(300, 700);
		gt.println("Maximum number of cars that can be entered is: "+maxNumRecords);
		// Declaring arrays to be used to stored the various data types & creating
		// instances of them of size maxNumRecords
		this.makes = new String[maxNumRecords];
		this.yearOfManufacture = new int[maxNumRecords];
		this.inStock = new boolean[maxNumRecords];
		this.weight = new double[maxNumRecords];
		this.series = new char[maxNumRecords];
		// Declaring & initializing counter that will be used to traverse the while loop
		// & arrays. This i keeps track of current car record.
		this.i = 0;
		// Declaring & initializing integer variable to keep track of record entry
		this.recordNum = 1;
		// This string will be used to capture each car record as a string and used to
		// enter a single row data to the table

		// User button calling the addCar() method of this carTypes instance. The user will be prompted to input the car record once 
		//they click the button.
		gt.addButton("Add New Car", this, "addCar");

	}

	public static void main(String[] args) {

		CarTypes carTypeInstance = new CarTypes();
	}

	// addCar method which adds a single row entry to the table. It also ensures
	// that the user does not enter more car records than maximum specified.
	public void addCar() {
        // checking if user has not inputed more than maximum allocated.
		if (i < maxNumRecords) {
			// Declaring string variable answer which will be used to store entire user
			// response before extracting inputs & storing in elements array.
			String answer;
			// Declaring string array to be used to store the 5 fields of user response.
			String[] elements;
            //declaring & initialising string variable used as row data to be added to table.
			String currentCarData = "";
			//prompt user to input car record separated by ":" and stores answer in string variable
			answer = gt.getInputString("Enter car record #: " + recordNum
					+ " made up of the following fields & separated by ':'\nMake:Year of Manufacture:In Stock:Weight:Series\n\nMAKE must be either toyota,mazda,bmw,honda\nYEAR must be a whole number between 1970-2021\nIN STOCK must be either 'true' or 'false'\nWEIGHT must be a number that is greater than 300.0\nSERIES must be a single character");
			// Declaring & creating a String array which will be used to store all the
			// string elements which have been split into 5 string elements
			elements = answer.split(":");

			// Assigning the first element of the elements string array to the ith entry of
			// the makes string array
			this.makes[i] = elements[0];
			// Verifying if the user typed in an acceptable value. If not then prompt them
			// to re-enter an acceptable value for car make using INDEFINITE SCENARIO 2
			// WHILE loop
			while (!("toyota".equals(makes[i]) || "mazda".equals(makes[i]) || "bmw".equals(makes[i])
					|| "honda".equals(makes[i]))) {
				this.makes[i] = gt.getInputString("Please re-enter MAKE that is either:\ntoyota\nmazda\nbmw\nhonda");
			}
            //concating string of car "make" with "tab"
			currentCarData += makes[i] + "\t";

			// Converting the 2nd element of the elements string array to an integer &
			// assigning it to ith entry of the yearofManufacture int array
			this.yearOfManufacture[i] = Integer.parseInt(elements[1]);
			// Verifying if the user typed in an acceptable value. If not then prompt them
			// to re-enter an acceptable value for car year of manufacture
			while (yearOfManufacture[i] < 1970 || yearOfManufacture[i] > 2021) {
				yearOfManufacture[i] = Integer
						.parseInt(this.gt.getInputString("Please enter YEAR OF MANUFACTURE between 1970-2021"));

			}
			// adding the 2nd field which is Year of Manufacture to row data string for
			// current car record i
			currentCarData += yearOfManufacture[i] + "\t";
			// Verifying if the user typed in an acceptable value of either 'true' or
			// 'false'
			while (!("true".equals(elements[2]) || "false".equals(elements[2]))) {
				elements[2] = gt.getInputString("Please re-enter 'IN STOCK' by typing value either 'true' or 'false'");
			}
			// adding the 3rd field which is In Stock to row data string for current car
			// record
			currentCarData += elements[2] + "\t";
			// Converting the 3nd element of the elements string array to a boolean &
			// assigning it to an ith entry of the boolean array inStock
			this.inStock[i] = Boolean.parseBoolean(elements[2]);

			// Converting the 4th element of the string array to a double/decimal number &
			// assigning it to ith entry of the double array called weight
			this.weight[i] = Double.parseDouble(elements[3]);
			// Verifying if the user typed in an acceptable value. If not then prompt them
			// to re-enter an acceptable value for car year of manufacture
			while (weight[i] < 300) {
				weight[i] = Double
						.parseDouble(gt.getInputString("Please re-enter WEIGHT that is a number greater than 300.0 "));
			}
			currentCarData += weight[i] + "\t";
			// Verifying if the user typed in a single Character for SERIES
			while (elements[4].length() > 1) {
				elements[4] = gt.getInputString("Please enter a single character for SERIES");
			}
			// adding the 5th field which is Series to row data string
			currentCarData += elements[4];
			// At this stage we have confirmed that user typed in a SINGLE character so we
			// are now converting from string to char
			this.series[i] = elements[4].charAt(0);
			gt.addRowToTable(tableIndex, currentCarData);
			//incrementing the counter & record number entry. This is also used to keep track of how many cars were added and to ensure 
			// we do not exceed the maximum allowed.
			i++;
			recordNum++;
		} else {
			//This will occur once user tries to add more car entries than the maximum allowed.
			gt.setFontSize(40);
			gt.setXY(300, 800);
			gt.setFontColor(255, 0, 0);
			gt.println("Maximum entries have been reached");
		}
	}

}
